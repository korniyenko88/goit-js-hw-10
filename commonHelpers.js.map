{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst btnStart = document.querySelector('button[data-start]');\nconst input = document.querySelector('#datatime-picer');\nconst day = document.querySelector('span[data-day]');\nconst hour = document.querySelector('span[data-hours]');\nconst minute = document.querySelector('span[data-minutes]');\nconst second = document.querySelector('span[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (options.defaultDate >= selectedDates[0]) {\n      btnStart.disabled = true;\n\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      btnStart.disabled = false;\n\n      iziToast.success({\n        title: 'OK',\n        message: 'You can press \"Start\"!',\n      });\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst addLeadingZero = value => value.toString().padStart(2, \"0\");\n\nbtnStart.addEventListener('click', startTimer);\n\nfunction startTimer() {\n    btnStart.disabled = true;\n    input.disabled = true;\n\n   \n\n    const timer = setInterval(() => {\n        const currentDate = new Date();\n        const targetDate = new Date(input.value);\n        const timeDiff = targetDate - currentDate;\n\n        const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n        day.textContent = addLeadingZero(days);\n        hour.textContent = addLeadingZero(hours);\n        minute.textContent = addLeadingZero(minutes);\n        second.textContent = addLeadingZero(seconds);\n\n        const isTimerFinished = [days, hours, minutes, seconds].every(value => value === 0);\n\n        if (isTimerFinished) {\n            clearInterval(timer);\n            input.disabled = false;\n            btnStart.disabled = false;\n\n            animatedDiv.classList.remove('animated');\n        }\n    }, 1000);\n}"],"names":["btnStart","input","day","hour","minute","second","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startTimer","timer","currentDate","timeDiff"],"mappings":"iyBAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAQ,SAAS,cAAc,iBAAiB,EAChDC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAS,SAAS,cAAc,oBAAoB,EAEpDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBD,EAAQ,aAAeC,EAAc,CAAC,GACxCP,EAAS,SAAW,GAEpBQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,IAEDR,EAAS,SAAW,GAEpBQ,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,wBACjB,CAAO,EAEJ,CACH,EACAC,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhEjB,EAAS,iBAAiB,QAASkB,CAAU,EAE7C,SAASA,GAAa,CAClBlB,EAAS,SAAW,GACpBC,EAAM,SAAW,GAIjB,MAAMkB,EAAQ,YAAY,IAAM,CAC5B,MAAMC,EAAc,IAAI,KAElBC,EADa,IAAI,KAAKpB,EAAM,KAAK,EACTmB,EAExB,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUW,CAAQ,EAE5DnB,EAAI,YAAcc,EAAeJ,CAAI,EACrCT,EAAK,YAAca,EAAeH,CAAK,EACvCT,EAAO,YAAcY,EAAeF,CAAO,EAC3CT,EAAO,YAAcW,EAAeD,CAAO,EAEnB,CAACH,EAAMC,EAAOC,EAASC,CAAO,EAAE,MAAME,GAASA,IAAU,CAAC,IAG9E,cAAcE,CAAK,EACnBlB,EAAM,SAAW,GACjBD,EAAS,SAAW,GAEpB,YAAY,UAAU,OAAO,UAAU,EAE9C,EAAE,GAAI,CACX"}